;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name tanks.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, cljs-hash.sha1 cljs-hash.sha1, render tanks.render, tanks.render tanks.render, tanks.utils tanks.utils}, :uses {log tanks.utils, sha1 cljs-hash.sha1}, :defs {game-over {:name tanks.core/game-over, :file "src-cljs/tanks/core.cljs", :line 97, :column 1, :end-line 97, :end-column 19, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 97, :column 10, :end-line 97, :end-column 19}}, random-color {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 535, :column 7, :end-line 535, :end-column 19, :arglists (quote ([timestamp c]))}, :name tanks.core/random-color, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([timestamp c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 535, :end-line 535, :max-fixed-arity 2, :fn-var true, :arglists (quote ([timestamp c]))}, get-world-events {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 435, :column 7, :end-line 435, :end-column 23, :arglists (quote ([timestamp]))}, :name tanks.core/get-world-events, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 23, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 435, :end-line 435, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp]))}, handle-ai {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 490, :column 7, :end-line 490, :end-column 16, :arglists (quote ([timestamp]))}, :name tanks.core/handle-ai, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 16, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp]))}, ui-level {:name tanks.core/ui-level, :file "src-cljs/tanks/core.cljs", :line 509, :column 1, :end-line 509, :end-column 18, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 509, :column 10, :end-line 509, :end-column 18}}, level-up {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 139, :column 7, :end-line 139, :end-column 15, :arglists (quote ([]))}, :name tanks.core/level-up, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, intro-enemy-position {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 108, :column 7, :end-line 108, :end-column 27, :arglists (quote ([]))}, :name tanks.core/intro-enemy-position, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:name tanks.core/main, :file "src-cljs/tanks/core.cljs", :line 610, :column 1, :end-line 610, :end-column 14, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 610, :column 10, :end-line 610, :end-column 14}}, expire-transforms {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 552, :column 7, :end-line 552, :end-column 24, :arglists (quote ([timestamp]))}, :name tanks.core/expire-transforms, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 24, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 552, :end-line 552, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp]))}, handle-events {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 452, :column 7, :end-line 452, :end-column 20, :arglists (quote ([events]))}, :name tanks.core/handle-events, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 20, :method-params ([events]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 1, :fn-var true, :arglists (quote ([events]))}, do-entity-transform {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 540, :column 7, :end-line 540, :end-column 26, :arglists (quote ([entities timestamp]))}, :name tanks.core/do-entity-transform, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 26, :method-params ([entities timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 540, :end-line 540, :max-fixed-arity 2, :fn-var true, :arglists (quote ([entities timestamp]))}, update-world {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 511, :column 7, :end-line 511, :end-column 19, :arglists (quote ([keypresses timestamp]))}, :name tanks.core/update-world, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([keypresses timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keypresses timestamp]))}, add-sapper {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 115, :column 7, :end-line 115, :end-column 17, :arglists (quote ([s]))}, :name tanks.core/add-sapper, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, explosion-at {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 245, :column 7, :end-line 245, :end-column 19, :arglists (quote ([p])), :doc "Creates an explosion at a point"}, :name tanks.core/explosion-at, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Creates an explosion at a point"}, add-ai {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 193, :column 7, :end-line 193, :end-column 13, :arglists (quote ([id]))}, :name tanks.core/add-ai, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 13, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, legal? {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 398, :column 7, :end-line 398, :end-column 13, :arglists (quote ([player new-position]))}, :name tanks.core/legal?, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 13, :method-params ([player new-position]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 398, :end-line 398, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player new-position]))}, stop-enemies {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 135, :column 7, :end-line 135, :end-column 19, :arglists (quote ([]))}, :name tanks.core/stop-enemies, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, blur-focus {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 572, :column 7, :end-line 572, :end-column 17, :arglists (quote ([& a])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(a)], :arglists ([& a]), :arglists-meta (nil)}}, :name tanks.core/blur-focus, :variadic true, :file "src-cljs/tanks/core.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(a)], :arglists ([& a]), :arglists-meta (nil)}, :method-params [(a)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 572, :end-line 572, :max-fixed-arity 0, :fn-var true, :arglists ([& a])}, toggle-start {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 578, :column 7, :end-line 578, :end-column 19, :arglists (quote ([]))}, :name tanks.core/toggle-start, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 578, :end-line 578, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, level-increase-rate {:name tanks.core/level-increase-rate, :file "src-cljs/tanks/core.cljs", :line 91, :column 1, :end-line 91, :end-column 29, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 91, :column 10, :end-line 91, :end-column 29}}, powers-of-two {:name tanks.core/powers-of-two, :file "src-cljs/tanks/core.cljs", :line 99, :column 1, :end-line 99, :end-column 23, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 99, :column 10, :end-line 99, :end-column 23}}, points-for-kill {:name tanks.core/points-for-kill, :file "src-cljs/tanks/core.cljs", :line 93, :column 1, :end-line 93, :end-column 25, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 93, :column 10, :end-line 93, :end-column 25}}, WIDTH {:name tanks.core/WIDTH, :file "src-cljs/tanks/core.cljs", :line 10, :column 1, :end-line 10, :end-column 11, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 10, :column 6, :end-line 10, :end-column 11}}, ease-in-quad {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 217, :column 7, :end-line 217, :end-column 19, :arglists (quote ([x t b c d]))}, :name tanks.core/ease-in-quad, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([x t b c d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x t b c d]))}, dist {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 233, :column 7, :end-line 233, :end-column 11, :arglists (quote ([p1 p2]))}, :name tanks.core/dist, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 11, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, get-player {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([h p c t]))}, :name tanks.core/get-player, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([h p c t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 4, :fn-var true, :arglists (quote ([h p c t]))}, time-now {:name tanks.core/time-now, :file "src-cljs/tanks/core.cljs", :line 25, :column 1, :end-line 25, :end-column 14, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 25, :column 6, :end-line 25, :end-column 14}}, move-polar {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 165, :column 7, :end-line 165, :end-column 17, :arglists (quote ([p a r]))}, :name tanks.core/move-polar, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([p a r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a r]))}, exp {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 220, :column 7, :end-line 220, :end-column 10, :arglists (quote ([x n]))}, :name tanks.core/exp, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 10, :method-params ([x n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x n]))}, detect-hits {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 458, :column 7, :end-line 458, :end-column 18, :arglists (quote ([timestamp]))}, :name tanks.core/detect-hits, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 18, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 458, :end-line 458, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp]))}, start-enemies {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 129, :column 7, :end-line 129, :end-column 20, :arglists (quote ([]))}, :name tanks.core/start-enemies, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, entities {:name tanks.core/entities, :file "src-cljs/tanks/core.cljs", :line 83, :column 1, :end-line 83, :end-column 18, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 83, :column 10, :end-line 83, :end-column 18}}, start {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 559, :column 7, :end-line 559, :end-column 12, :arglists (quote ([])), :doc "create the render loop for the game"}, :name tanks.core/start, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 559, :end-line 559, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "create the render loop for the game"}, player-key-map {:name tanks.core/player-key-map, :file "src-cljs/tanks/core.cljs", :line 210, :column 1, :end-line 210, :end-column 24, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 210, :column 10, :end-line 210, :end-column 24}}, detect-shot-oob {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 471, :column 7, :end-line 471, :end-column 22, :arglists (quote ([shots]))}, :name tanks.core/detect-shot-oob, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 22, :method-params ([shots]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 471, :end-line 471, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shots]))}, oob? {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 226, :column 7, :end-line 226, :end-column 11, :arglists (quote ([p]))}, :name tanks.core/oob?, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 11, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, power-of-two? {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 104, :column 7, :end-line 104, :end-column 20, :arglists (quote ([n]))}, :name tanks.core/power-of-two?, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 20, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, key-map {:name tanks.core/key-map, :file "src-cljs/tanks/core.cljs", :line 66, :column 1, :end-line 66, :end-column 17, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 66, :column 10, :end-line 66, :end-column 17}}, entity-id {:name tanks.core/entity-id, :file "src-cljs/tanks/core.cljs", :line 18, :column 1, :end-line 18, :end-column 19, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 18, :column 10, :end-line 18, :end-column 19}}, enemy-interval {:name tanks.core/enemy-interval, :file "src-cljs/tanks/core.cljs", :line 130, :column 3, :end-line 130, :end-column 22, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 130, :column 8, :end-line 130, :end-column 22}}, collision? {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 178, :column 7, :end-line 178, :end-column 17, :arglists (quote ([p q]))}, :name tanks.core/collision?, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p q]))}, level {:name tanks.core/level, :file "src-cljs/tanks/core.cljs", :line 85, :column 1, :end-line 85, :end-column 15, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 85, :column 10, :end-line 85, :end-column 15}}, world {:name tanks.core/world, :file "src-cljs/tanks/core.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 13, :column 10, :end-line 13, :end-column 15}}, check-level-up {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 148, :column 7, :end-line 148, :end-column 21, :arglists (quote ([]))}, :name tanks.core/check-level-up, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-player {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 203, :column 7, :end-line 203, :end-column 17, :arglists (quote ([]))}, :name tanks.core/add-player, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-game {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 153, :column 7, :end-line 153, :end-column 16, :arglists (quote ([]))}, :name tanks.core/init-game, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, angle-at {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 238, :column 7, :end-line 238, :end-column 15, :arglists (quote ([p1 p2]))}, :name tanks.core/angle-at, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 15, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, ai-agents {:name tanks.core/ai-agents, :file "src-cljs/tanks/core.cljs", :line 81, :column 1, :end-line 81, :end-column 19, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 81, :column 10, :end-line 81, :end-column 19}}, get-shrapnel {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([p c s a duration])), :doc "position color speed and angle"}, :name tanks.core/get-shrapnel, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 19, :method-params ([p c s a duration]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 5, :fn-var true, :arglists (quote ([p c s a duration])), :doc "position color speed and angle"}, do-event {:name tanks.core/do-event, :file "src-cljs/tanks/core.cljs", :line 268, :column 1, :end-line 268, :end-column 19, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 268, :column 11, :end-line 268, :end-column 19}}, keypresses {:name tanks.core/keypresses, :file "src-cljs/tanks/core.cljs", :line 79, :column 1, :end-line 79, :end-column 20, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 79, :column 10, :end-line 79, :end-column 20}}, app-ui {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 598, :column 7, :end-line 598, :end-column 13, :arglists (quote ([]))}, :name tanks.core/app-ui, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, first-id {:name tanks.core/first-id, :file "src-cljs/tanks/core.cljs", :line 23, :column 1, :end-line 23, :end-column 18, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 23, :column 10, :end-line 23, :end-column 18}}, ui-player-score {:name tanks.core/ui-player-score, :file "src-cljs/tanks/core.cljs", :line 508, :column 1, :end-line 508, :end-column 25, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 508, :column 10, :end-line 508, :end-column 25}}, HEIGHT {:name tanks.core/HEIGHT, :file "src-cljs/tanks/core.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 11, :column 6, :end-line 11, :end-column 12}}, sapper-rate {:name tanks.core/sapper-rate, :file "src-cljs/tanks/core.cljs", :line 87, :column 1, :end-line 87, :end-column 21, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 87, :column 10, :end-line 87, :end-column 21}}, sapper-explosion-at {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 262, :column 7, :end-line 262, :end-column 26, :arglists (quote ([p]))}, :name tanks.core/sapper-explosion-at, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 26, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 262, :end-line 262, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, ring-explosion-at {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 254, :column 7, :end-line 254, :end-column 24, :arglists (quote ([start p])), :doc "Creates an explosion at a point"}, :name tanks.core/ring-explosion-at, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 24, :method-params ([start p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 2, :fn-var true, :arglists (quote ([start p])), :doc "Creates an explosion at a point"}, playing {:name tanks.core/playing, :file "src-cljs/tanks/core.cljs", :line 95, :column 1, :end-line 95, :end-column 17, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 95, :column 10, :end-line 95, :end-column 17}}, can-shoot? {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 223, :column 7, :end-line 223, :end-column 17, :arglists (quote ([p t]))}, :name tanks.core/can-shoot?, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 17, :method-params ([p t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p t]))}, get-id {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([]))}, :name tanks.core/get-id, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, speed-rate {:name tanks.core/speed-rate, :file "src-cljs/tanks/core.cljs", :line 89, :column 1, :end-line 89, :end-column 20, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 89, :column 10, :end-line 89, :end-column 20}}, get-shots {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 170, :column 7, :end-line 170, :end-column 16, :arglists (quote ([entities]))}, :name tanks.core/get-shots, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 16, :method-params ([entities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entities]))}, player {:name tanks.core/player, :file "src-cljs/tanks/core.cljs", :line 77, :column 1, :end-line 77, :end-column 16, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 77, :column 10, :end-line 77, :end-column 16}}, get-players-and-walls {:protocol-inline nil, :meta {:file "/Users/justinthomas/workspaces/github.com/base698/tanks-clj/src-cljs/tanks/core.cljs", :line 173, :column 7, :end-line 173, :end-column 28, :arglists (quote ([entities]))}, :name tanks.core/get-players-and-walls, :variadic false, :file "src-cljs/tanks/core.cljs", :end-column 28, :method-params ([entities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entities]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:started :kills :r :splash-damage :space :player-move :color :hit :span#player-name :div.pinfo :else :shot-move :shot :button#start :speed :default :property :w :time-in :human :player-turn :transforms :sapper :width :span#score :expire-length :val :type :player-id :expire :duration :ai-id :angle :hits :player-bomb :s :on-click :shots :shoot :shrapnel-move :player-last-angle :shot-id :div#container :damage :h :div#title-bar :from-player-id :id :sapper-move :h1#title :score :b :random :health :position :player :d :game-over :shrapnel :canvas#screen :last-shot :death :player-last-position :hierarchy :timestamp :span#level :time-between-shots :entity :bombs :from-player :a :height :to}, :order [:width :height :color :speed :w :time-in :expire-length :type :angle :h :id :position :shrapnel :kills :transforms :hits :shots :score :health :last-shot :time-between-shots :bombs :player :a :d :space :s :sapper :human :shot :player-id :player-last-position :player-last-angle :ai-id :b :shoot :player-bomb :player-move :player-turn :hierarchy :default :sapper-move :timestamp :r :val :splash-damage :started :property :duration :random :entity :damage :shot-move :shrapnel-move :expire :from-player-id :death :game-over :hit :shot-id :from-player :to :else :div#container :div#title-bar :h1#title :button#start :on-click :canvas#screen :div.pinfo :span#player-name :span#score :span#level]}, :doc nil}